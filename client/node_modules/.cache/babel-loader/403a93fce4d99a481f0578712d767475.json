{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\work\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\work\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\work\\\\client\\\\src\\\\components\\\\user\\\\user.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchNews } from '../../actions';\nimport { compose } from \"../../utils\";\nimport { withBookstoreService } from \"../hoc\"; // import LoadingSpinner from \"../spinner\";\n// import ErrorBoundry from \"../error-boundry\";\n\nimport '../news/news.css';\n\nvar User = function User() {\n  // Пример отправки POST запроса:\n  function postData() {\n    return _postData.apply(this, arguments);\n  }\n\n  function _postData() {\n    _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url,\n          data,\n          response,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n              data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 4;\n              return fetch(url, {\n                method: 'POST',\n                // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors',\n                // no-cors, *cors, same-origin\n                cache: 'no-cache',\n                // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: 'same-origin',\n                // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                redirect: 'follow',\n                // manual, *follow, error\n                referrerPolicy: 'no-referrer',\n                // no-referrer, *client\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _postData.apply(this, arguments);\n  }\n\n  postData('https://localhost:5000', {\n    answer: 42\n  }).then(function (data) {\n    console.log(data); // JSON data parsed by `response.json()` call\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, \"hello\");\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var _ref$newsList = _ref.newsList,\n      products = _ref$newsList.products,\n      pending = _ref$newsList.pending,\n      error = _ref$newsList.error;\n  return {\n    products: products,\n    pending: pending,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchProducts: fetchNews\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(User);","map":{"version":3,"sources":["D:/work/client/src/components/user/user.js"],"names":["React","connect","bindActionCreators","fetchNews","compose","withBookstoreService","User","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","answer","then","console","log","mapStateToProps","newsList","products","pending","error","mapDispatchToProps","dispatch","fetchProducts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,eAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,QAAnC,C,CACA;AACA;;AACA,OAAO,kBAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB;AAFiB,WAGFC,QAHE;AAAA;AAAA;;AAAA;AAAA,yEAGjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,GAAxB,2DAA8B,EAA9B;AAAkCC,cAAAA,IAAlC,2DAAyC,EAAzC;AAAA;AAAA,qBAEyBC,KAAK,CAACF,GAAD,EAAM;AAChCG,gBAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,gBAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,gBAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,gBAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT,CAEP;;AAFO,iBALuB;AAShCC,gBAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,gBAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/BC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAX0B,CAWL;;AAXK,eAAN,CAF9B;;AAAA;AAEQY,cAAAA,QAFR;AAAA;AAAA,qBAeeA,QAAQ,CAACC,IAAT,EAff;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHiB;AAAA;AAAA;;AAqBjBf,EAAAA,QAAQ,CAAC,wBAAD,EAA2B;AAAEgB,IAAAA,MAAM,EAAE;AAAV,GAA3B,CAAR,CACGC,IADH,CACQ,UAACf,IAAD,EAAU;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EADc,CACK;AACpB,GAHH;AAIF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGC,CA5BD;;AA+BA,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,OAA4C;AAAA,2BAA1CC,QAA0C;AAAA,MAA/BC,QAA+B,iBAA/BA,QAA+B;AAAA,MAArBC,OAAqB,iBAArBA,OAAqB;AAAA,MAAZC,KAAY,iBAAZA,KAAY;AAClE,SAAO;AAACF,IAAAA,QAAQ,EAARA,QAAD;AAAWC,IAAAA,OAAO,EAAPA,OAAX;AAAoBC,IAAAA,KAAK,EAALA;AAApB,GAAP;AACD,CAFD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAI/B,kBAAkB,CAAC;AAGxDgC,IAAAA,aAAa,EAAE/B;AAHyC,GAAD,EAKtD8B,QALsD,CAAtB;AAAA,CAAnC;;AAQA,eAAe7B,OAAO,CAACC,oBAAoB,EAArB,EAAyBJ,OAAO,CAAC0B,eAAD,EAAkBK,kBAAlB,CAAhC,CAAP,CAA8E1B,IAA9E,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {fetchNews} from '../../actions';\r\n\r\nimport {compose} from \"../../utils\";\r\nimport {withBookstoreService} from \"../hoc\";\r\n// import LoadingSpinner from \"../spinner\";\r\n// import ErrorBoundry from \"../error-boundry\";\r\nimport '../news/news.css'\r\n\r\nconst User = () => {\r\n  \r\n  // Пример отправки POST запроса:\r\n  async function postData(url = '', data = {}) {\r\n    // Default options are marked with *\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *client\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return await response.json(); // parses JSON response into native JavaScript objects\r\n  }\r\n  \r\n  postData('https://localhost:5000', { answer: 42 })\r\n    .then((data) => {\r\n      console.log(data); // JSON data parsed by `response.json()` call\r\n    });\r\nreturn(\r\n  <div>hello</div>\r\n)\r\n}\r\n\r\n\r\nconst mapStateToProps = ({newsList: {products, pending, error}}) => {\r\n  return {products, pending, error};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  \r\n  \r\n  fetchProducts: fetchNews\r\n  \r\n}, dispatch)\r\n\r\n\r\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(User);\r\n"]},"metadata":{},"sourceType":"module"}