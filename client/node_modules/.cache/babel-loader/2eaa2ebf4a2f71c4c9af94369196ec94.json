{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers'; // const logMiddleware = ({ getState }) => (next) => (action) => {\n//   console.log(action.type, getState());\n//   return next(action);\n// };\n\nvar stringMiddleware = function stringMiddleware() {\n  return function (next) {\n    return function (action) {\n      if (typeof action === 'string') {\n        return next({\n          type: action\n        });\n      }\n\n      return next(action);\n    };\n  };\n};\n\nvar composeEnhancers = composeWithDevTools({\n  trace: true,\n  traceLimit: 25\n});\nvar store = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware, stringMiddleware)));\nexport default store;","map":{"version":3,"sources":["D:/work/130-thunk/130-thunk/src/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","composeWithDevTools","reducer","stringMiddleware","next","action","type","composeEnhancers","trace","traceLimit","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,YAApB,C,CAGA;AACA;AACA;AACA;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAM,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACnD,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAOD,IAAI,CAAC;AACVE,UAAAA,IAAI,EAAED;AADI,SAAD,CAAX;AAGD;;AAED,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KAR8B;AAAA,GAAN;AAAA,CAAzB;;AAUA,IAAME,gBAAgB,GAAGN,mBAAmB,CAAC;AAAGO,EAAAA,KAAK,EAAE,IAAV;AAAgBC,EAAAA,UAAU,EAAE;AAA5B,CAAD,CAA5C;AAEA,IAAMC,KAAK,GAAGZ,WAAW,CAACI,OAAD,EAAUK,gBAAgB,CAAER,eAAe,CAClEC,eADkE,EACjDG,gBADiD,CAAjB,CAA1B,CAAzB;AAIA,eAAeO,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\n\n\n// const logMiddleware = ({ getState }) => (next) => (action) => {\n//   console.log(action.type, getState());\n//   return next(action);\n// };\n\nconst stringMiddleware = () => (next) => (action) => {\n  if (typeof action === 'string') {\n    return next({\n      type: action\n    });\n  }\n\n  return next(action);\n};\n\nconst composeEnhancers = composeWithDevTools({  trace: true, traceLimit: 25 });\n\nconst store = createStore(reducer, composeEnhancers( applyMiddleware(\n  thunkMiddleware, stringMiddleware)));\n\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}