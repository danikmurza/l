{"ast":null,"code":"var booksRequested = function booksRequested() {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  };\n};\n\nvar booksLoaded = function booksLoaded(newBooks) {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\n\nvar booksError = function booksError(error) {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\n\nexport var bookAddedToCart = function bookAddedToCart(bookId) {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  };\n};\nexport var bookRemovedFromCart = function bookRemovedFromCart(bookId) {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\nexport var allBooksRemovedFromCart = function allBooksRemovedFromCart(bookId) {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\nexport function fetchProductsPending() {\n  return {\n    type: 'FETCH_PRODUCTS_PENDING',\n    products: [],\n    error: false\n  };\n}\nexport function fetchProductsSuccess(products) {\n  return {\n    type: 'FETCH_PRODUCTS_SUCCESS',\n    products: products,\n    error: false\n  };\n}\nexport function fetchProductsError(error) {\n  return {\n    type: 'FETCH_PRODUCTS_ERROR',\n    products: [],\n    error: error\n  };\n} // const fetchBooksOld = (bookstoreService, dispatch) => () => {\n//   dispatch(booksRequested());\n//   bookstoreService.getBooks()\n//     .then((data) => dispatch(booksLoaded(data)))\n//     .catch((err) => dispatch(booksError(err)));\n// };\n\nexport var fetchBooks = function fetchBooks(bookstoreService) {\n  return function () {\n    return function (dispatch) {\n      dispatch(booksRequested());\n      bookstoreService.getBooks().then(function (data) {\n        return dispatch(booksLoaded(data));\n      }).catch(function (err) {\n        return dispatch(booksError(err));\n      });\n    };\n  };\n};","map":{"version":3,"sources":["D:/work/130-thunk/130-thunk/src/actions/index.js"],"names":["booksRequested","type","booksLoaded","newBooks","payload","booksError","error","bookAddedToCart","bookId","bookRemovedFromCart","allBooksRemovedFromCart","fetchProductsPending","products","fetchProductsSuccess","fetchProductsError","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","err"],"mappings":"AACA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALD;;AAOA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,SAAO;AACLL,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAUA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AACzC,SAAO;AACLP,IAAAA,IAAI,EAAE,oBADD;AAELG,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,MAAD,EAAY;AAC7C,SAAO;AACLP,IAAAA,IAAI,EAAE,wBADD;AAELG,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,MAAD,EAAY;AACjD,SAAO;AACLP,IAAAA,IAAI,EAAE,6BADD;AAELG,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM;AAUP,OAAO,SAASG,oBAAT,GAAgC;AACrC,SAAO;AACLV,IAAAA,IAAI,EAAE,wBADD;AAELW,IAAAA,QAAQ,EAAE,EAFL;AAGLN,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD;AAED,OAAO,SAASO,oBAAT,CAA8BD,QAA9B,EAAwC;AAC7C,SAAO;AACLX,IAAAA,IAAI,EAAE,wBADD;AAELW,IAAAA,QAAQ,EAAEA,QAFL;AAGLN,IAAAA,KAAK,EAAC;AAHD,GAAP;AAKD;AAED,OAAO,SAASQ,kBAAT,CAA4BR,KAA5B,EAAmC;AACxC,SAAO;AACLL,IAAAA,IAAI,EAAE,sBADD;AAELW,IAAAA,QAAQ,EAAE,EAFL;AAGLN,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;;AAEC,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAACC,gBAAD;AAAA,SAAsB;AAAA,WAAM,UAACC,QAAD,EAAc;AACnEA,MAAAA,QAAQ,CAACjB,cAAc,EAAf,CAAR;AACAgB,MAAAA,gBAAgB,CAACE,QAAjB,GACGC,IADH,CACQ,UAACC,IAAD;AAAA,eAAUH,QAAQ,CAACf,WAAW,CAACkB,IAAD,CAAZ,CAAlB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASL,QAAQ,CAACZ,UAAU,CAACiB,GAAD,CAAX,CAAjB;AAAA,OAFT;AAGD,KALgD;AAAA,GAAtB;AAAA,CAAnB","sourcesContent":["\nconst booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  };\n};\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\n\n\n\n\nexport const bookAddedToCart = (bookId) => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  };\n};\n\nexport const bookRemovedFromCart = (bookId) => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nexport const allBooksRemovedFromCart = (bookId) => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\n\n\n\nexport function fetchProductsPending() {\n  return {\n    type: 'FETCH_PRODUCTS_PENDING',\n    products: [],\n    error: false\n  }\n}\n\nexport function fetchProductsSuccess(products) {\n  return {\n    type: 'FETCH_PRODUCTS_SUCCESS',\n    products: products,\n    error:false\n  }\n}\n\nexport function fetchProductsError(error) {\n  return {\n    type: 'FETCH_PRODUCTS_ERROR',\n    products: [],\n    error: error\n  }\n}\n\n\n// const fetchBooksOld = (bookstoreService, dispatch) => () => {\n//   dispatch(booksRequested());\n//   bookstoreService.getBooks()\n//     .then((data) => dispatch(booksLoaded(data)))\n//     .catch((err) => dispatch(booksError(err)));\n// };\n\n export const fetchBooks = (bookstoreService) => () => (dispatch) => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(booksError(err)));\n};\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}