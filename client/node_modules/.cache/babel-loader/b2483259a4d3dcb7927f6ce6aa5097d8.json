{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\work\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\work\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\work\\\\client\\\\src\\\\components\\\\user\\\\user.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchNews } from '../../actions';\nimport { compose } from \"../../utils\";\nimport { withBookstoreService } from \"../hoc\"; // import LoadingSpinner from \"../spinner\";\n// import ErrorBoundry from \"../error-boundry\";\n\nimport '../news/news.css';\n\nvar User = function User() {\n  // Пример отправки POST запроса:\n  function postData(_x) {\n    return _postData.apply(this, arguments);\n  }\n\n  function _postData() {\n    _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var data,\n          response,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return fetch(url, {\n                method: 'GET' // *GET, POST, PUT, DELETE, etc.\n\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _postData.apply(this, arguments);\n  }\n\n  postData('localhost:3000/auth').then(function (data) {\n    console.log(data); // JSON data parsed by `response.json()` call\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"jfffff\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"click\"));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var _ref$newsList = _ref.newsList,\n      products = _ref$newsList.products,\n      pending = _ref$newsList.pending,\n      error = _ref$newsList.error;\n  return {\n    products: products,\n    pending: pending,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchProducts: fetchNews\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(User);","map":{"version":3,"sources":["D:/work/client/src/components/user/user.js"],"names":["React","connect","bindActionCreators","fetchNews","compose","withBookstoreService","User","postData","url","data","fetch","method","response","json","then","console","log","mapStateToProps","newsList","products","pending","error","mapDispatchToProps","dispatch","fetchProducts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,eAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,QAAnC,C,CACA;AACA;;AACA,OAAO,kBAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB;AAFiB,WAGFC,QAHE;AAAA;AAAA;;AAAA;AAAA,yEAGjB,iBAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6BC,cAAAA,IAA7B,2DAAoC,EAApC;AAAA;AAAA,qBAEyBC,KAAK,CAACF,GAAD,EAAM;AAChCG,gBAAAA,MAAM,EAAE,KADwB,CACjB;;AADiB,eAAN,CAF9B;;AAAA;AAEQC,cAAAA,QAFR;AAAA;AAAA,qBAKeA,QAAQ,CAACC,IAAT,EALf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHiB;AAAA;AAAA;;AAWjBN,EAAAA,QAAQ,CAAC,qBAAD,CAAR,CACGO,IADH,CACQ,UAACL,IAAD,EAAU;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EADc,CACK;AACpB,GAHH;AAIF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,IAAA,OAAO,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAOC,CAtBD;;AAyBA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,OAA4C;AAAA,2BAA1CC,QAA0C;AAAA,MAA/BC,QAA+B,iBAA/BA,QAA+B;AAAA,MAArBC,OAAqB,iBAArBA,OAAqB;AAAA,MAAZC,KAAY,iBAAZA,KAAY;AAClE,SAAO;AAACF,IAAAA,QAAQ,EAARA,QAAD;AAAWC,IAAAA,OAAO,EAAPA,OAAX;AAAoBC,IAAAA,KAAK,EAALA;AAApB,GAAP;AACD,CAFD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIrB,kBAAkB,CAAC;AAGxDsB,IAAAA,aAAa,EAAErB;AAHyC,GAAD,EAKtDoB,QALsD,CAAtB;AAAA,CAAnC;;AAQA,eAAenB,OAAO,CAACC,oBAAoB,EAArB,EAAyBJ,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAhC,CAAP,CAA8EhB,IAA9E,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {fetchNews} from '../../actions';\r\n\r\nimport {compose} from \"../../utils\";\r\nimport {withBookstoreService} from \"../hoc\";\r\n// import LoadingSpinner from \"../spinner\";\r\n// import ErrorBoundry from \"../error-boundry\";\r\nimport '../news/news.css'\r\n\r\nconst User = () => {\r\n  \r\n  // Пример отправки POST запроса:\r\n  async function postData(url, data = {}) {\r\n    // Default options are marked with *\r\n    const response = await fetch(url, {\r\n      method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n      });\r\n    return await response.json(); // parses JSON response into native JavaScript objects\r\n  }\r\n  \r\n  postData('localhost:3000/auth')\r\n    .then((data) => {\r\n      console.log(data); // JSON data parsed by `response.json()` call\r\n    });\r\nreturn(\r\n  <div>\r\n    <h1>jfffff</h1>\r\n    <button onClick={postData}>click</button>\r\n  </div>\r\n  \r\n)\r\n}\r\n\r\n\r\nconst mapStateToProps = ({newsList: {products, pending, error}}) => {\r\n  return {products, pending, error};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  \r\n  \r\n  fetchProducts: fetchNews\r\n  \r\n}, dispatch)\r\n\r\n\r\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(User);\r\n"]},"metadata":{},"sourceType":"module"}