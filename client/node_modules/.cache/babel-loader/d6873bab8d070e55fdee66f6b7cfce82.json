{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\work\\\\client\\\\src\\\\components\\\\user\\\\user.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchNews } from '../../actions';\nimport { compose } from \"../../utils\";\nimport { withBookstoreService } from \"../hoc\"; // import LoadingSpinner from \"../spinner\";\n// import ErrorBoundry from \"../error-boundry\";\n\nimport '../news/news.css';\n\nvar User = function User() {\n  fetch('localhost:3000/auth', {\n    method: 'GET'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    console.log(res);\n  }).catch(function (error) {\n    console.log(error);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"jfffff\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"click\"));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var _ref$newsList = _ref.newsList,\n      products = _ref$newsList.products,\n      pending = _ref$newsList.pending,\n      error = _ref$newsList.error;\n  return {\n    products: products,\n    pending: pending,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchProducts: fetchNews\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(User);","map":{"version":3,"sources":["D:/work/client/src/components/user/user.js"],"names":["React","connect","bindActionCreators","fetchNews","compose","withBookstoreService","User","fetch","method","then","res","json","console","log","catch","error","postData","mapStateToProps","newsList","products","pending","mapDispatchToProps","dispatch","fetchProducts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,eAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,QAAmC,QAAnC,C,CACA;AACA;;AACA,OAAO,kBAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBC,EAAAA,KAAK,CAAC,qBAAD,EAAwB;AAC3BC,IAAAA,MAAM,EAAE;AADmB,GAAxB,CAAL,CAEGC,IAFH,CAEQ,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAFX,EAGGF,IAHH,CAGQ,UAACC,GAAD,EAAQ;AAAEE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAAiB,GAHnC,EAIGI,KAJH,CAIS,UAAAC,KAAK,EAAI;AAACH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAAmB,GAJtC;AAKF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,IAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAOC,CAbD;;AAgBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAA4C;AAAA,2BAA1CC,QAA0C;AAAA,MAA/BC,QAA+B,iBAA/BA,QAA+B;AAAA,MAArBC,OAAqB,iBAArBA,OAAqB;AAAA,MAAZL,KAAY,iBAAZA,KAAY;AAClE,SAAO;AAACI,IAAAA,QAAQ,EAARA,QAAD;AAAWC,IAAAA,OAAO,EAAPA,OAAX;AAAoBL,IAAAA,KAAK,EAALA;AAApB,GAAP;AACD,CAFD;;AAKA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIpB,kBAAkB,CAAC;AAGxDqB,IAAAA,aAAa,EAAEpB;AAHyC,GAAD,EAKtDmB,QALsD,CAAtB;AAAA,CAAnC;;AAQA,eAAelB,OAAO,CAACC,oBAAoB,EAArB,EAAyBJ,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAhC,CAAP,CAA8Ef,IAA9E,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {fetchNews} from '../../actions';\r\n\r\nimport {compose} from \"../../utils\";\r\nimport {withBookstoreService} from \"../hoc\";\r\n// import LoadingSpinner from \"../spinner\";\r\n// import ErrorBoundry from \"../error-boundry\";\r\nimport '../news/news.css'\r\n\r\nconst User = () => {\r\n  fetch('localhost:3000/auth', {\r\n    method: 'GET'\r\n  }).then(res => res.json())\r\n    .then((res)=> { console.log(res)})\r\n    .catch(error => {console.log(error)})\r\nreturn(\r\n  <div>\r\n    <h1>jfffff</h1>\r\n    <button onClick={postData}>click</button>\r\n  </div>\r\n  \r\n)\r\n}\r\n\r\n\r\nconst mapStateToProps = ({newsList: {products, pending, error}}) => {\r\n  return {products, pending, error};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  \r\n  \r\n  fetchProducts: fetchNews\r\n  \r\n}, dispatch)\r\n\r\n\r\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(User);\r\n"]},"metadata":{},"sourceType":"module"}