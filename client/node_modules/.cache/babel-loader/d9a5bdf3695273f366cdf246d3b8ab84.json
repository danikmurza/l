{"ast":null,"code":"import _classCallCheck from \"D:\\\\work\\\\aa\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\aa\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\aa\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\aa\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\aa\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\work\\\\aa\\\\client\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nimport './book-list.css';\n\nvar BookList = function BookList(_ref) {// return (\n  //   <ul className=\"book-list\">\n  //     {\n  //       books.map((book) => {\n  //         return (\n  //           <li key={book.id}>\n  //             <BookListItem\n  //               book={book}\n  //               onAddedToCart={() => onAddedToCart(book.id)}/>\n  //           </li>\n  //         );\n  //       })\n  //     }\n  //   </ul>\n  // );\n\n  var books = _ref.books,\n      onAddedToCart = _ref.onAddedToCart;\n};\n\nvar BookListContainer = /*#__PURE__*/function (_Component) {\n  _inherits(BookListContainer, _Component);\n\n  function BookListContainer() {\n    _classCallCheck(this, BookListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookListContainer).apply(this, arguments));\n  }\n\n  _createClass(BookListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // setTimeout(()=>{\n      this.props.fetchBooks(); // },1000)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          books = _this$props.books,\n          loading = _this$props.loading,\n          error = _this$props.error,\n          onAddedToCart = _this$props.onAddedToCart;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(ErrorIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(BookList, {\n        books: books,\n        onAddedToCart: onAddedToCart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return BookListContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var _ref2$bookList = _ref2.bookList,\n      books = _ref2$bookList.books,\n      loading = _ref2$bookList.loading,\n      error = _ref2$bookList.error;\n  return {\n    books: books,\n    loading: loading,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchBooks: fetchBooks,\n    onAddedToCart: bookAddedToCart\n  }, dispatch);\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);","map":{"version":3,"sources":["D:/work/aa/client/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","bindActionCreators","connect","withBookstoreService","fetchBooks","bookAddedToCart","compose","Spinner","ErrorIndicator","BookList","books","onAddedToCart","BookListContainer","props","loading","error","mapStateToProps","bookList","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,OAAO,iBAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8B,CAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAf6C,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAgB9C,CAhBD;;IAkBMC,iB;;;;;;;;;;;wCAEgB;AACpB;AACE,WAAKC,KAAL,CAAWT,UAAX,GAFkB,CAIlB;AAED;;;6BAEQ;AAAA,wBAC0C,KAAKS,KAD/C;AAAA,UACCH,KADD,eACCA,KADD;AAAA,UACQI,OADR,eACQA,OADR;AAAA,UACiBC,KADjB,eACiBA,KADjB;AAAA,UACwBJ,aADxB,eACwBA,aADxB;;AAGP,UAAIG,OAAJ,EAAa;AACX,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAIC,KAAJ,EAAW;AACT,4BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,0BAAO,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,KAAjB;AAAwB,QAAA,aAAa,EAAEC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAtB6BZ,S;;AAyBhC,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,QAA4C;AAAA,6BAAzCC,QAAyC;AAAA,MAA7BP,KAA6B,kBAA7BA,KAA6B;AAAA,MAAtBI,OAAsB,kBAAtBA,OAAsB;AAAA,MAAbC,KAAa,kBAAbA,KAAa;AAClE,SAAO;AAAEL,IAAAA,KAAK,EAALA,KAAF;AAASI,IAAAA,OAAO,EAAPA,OAAT;AAAkBC,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD,CAFD;;AAIA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AAErC,SAAOlB,kBAAkB,CAAC;AACxBG,IAAAA,UAAU,EAAEA,UADY;AAExBO,IAAAA,aAAa,EAAEN;AAFS,GAAD,EAGtBc,QAHsB,CAAzB;AAID,CAND;;AAQA,eAAeb,OAAO,CACpBH,oBAAoB,EADA,EAEpBD,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAFa,CAAP,CAGbN,iBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport { compose } from '../../utils';\n\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  // return (\n  //   <ul className=\"book-list\">\n  //     {\n  //       books.map((book) => {\n  //         return (\n  //           <li key={book.id}>\n  //             <BookListItem\n  //               book={book}\n  //               onAddedToCart={() => onAddedToCart(book.id)}/>\n  //           </li>\n  //         );\n  //       })\n  //     }\n  //   </ul>\n  // );\n};\n\nclass BookListContainer extends Component {\n\n  componentDidMount() {\n  // setTimeout(()=>{\n    this.props.fetchBooks();\n\n    // },1000)\n\n  }\n\n  render() {\n    const { books, loading, error, onAddedToCart } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>;\n  }\n}\n\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = dispatch => {\n\n  return bindActionCreators({\n    fetchBooks: fetchBooks,\n    onAddedToCart: bookAddedToCart\n  }, dispatch);\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n"]},"metadata":{},"sourceType":"module"}